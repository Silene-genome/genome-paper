iris.short[iris.short$Species == "setosa",])
lines(iris.short$Sepal.Length[iris$Species == "setosa"],
predict(model.seto), lwd = 1)
model.versi <- lm(Sepal.Width ~ Sepal.Length,
data= iris.short[iris.short$Species == "versicolor",])
lines(iris.short$Sepal.Length[iris$Species == "versicolor"], predict(model.versi),
lwd = 2)
legend("topright",
legend = c( expression( italic("Iris setosa")),
expression( italic( "Iris versicolor"))),
pch = c(1, 16), cex = 1.1, bty = "n")
# basic colors, with numbers 1-8
barplot(rep(1, times=8), col=1:8,
names.arg = c(1:8), xlab="Color number", yaxt = "n")
showCols <- function(cl=colors(), bg = "grey",
cex = 0.75, rot = 30) {
m <- ceiling(sqrt(n <-length(cl)))
length(cl) <- m*m; cm <- matrix(cl, m)
require("grid")
grid.newpage(); vp <- viewport(w = .92, h = .92)
grid.rect(gp=gpar(fill=bg))
grid.text(cm, x = col(cm)/m, y = rev(row(cm))/m, rot = rot,
vp=vp, gp=gpar(cex = cex, col = cm))
}
showCols(cl= colors(), bg="gray33", rot=30, cex=1)
showCols(bg="white",cl=colors()[1:60], rot=30, cex=0.9)
model <- lm(lenth ~ dose, data=ToothGrowth)
model <- lm(length ~ dose, data=ToothGrowth)
str(ToothGrowth)
model <- lm(len ~ dose, data=ToothGrowth)
anova(model)
plot(model)
install.packages("agricolae")
# Original version of the Tukey test (similar to Study Guide)
install.packages("agricolae")
library(agricolae) # activate package
TukeyHSD(model)
Tukey.HSD(model)
??Tukey
HSD.test(model)
HSD.test(model, trt="dose")
summary(HSD.test(model, trt="dose"))
plot(HSD.test(model, trt="dose"))
HSD.test(model, trt="dose")
plot(HSD.test(model, trt="dose", console=T))
plot(HSD.test(model, trt="dose", console=T, group=T))
model.aov <- aov(len ~ dose, data=ToothGrowth)
model.aov <- aov(len ~ dose, data=ToothGrowth)
Tukey.HSD(model.aov)
TukeyHSD(model.aov)
anova(model)
model <- lm(len ~ as.factor(dose), data=ToothGrowth)
anova(model)
plot(model)
plot(HSD.test(model, trt="dose", console=T, group=T))
HSD.test(model, trt="dose", console=T, group=T)
model <- lm(len ~ dose, data=ToothGrowth)
anova(model)
plot(model)
par(mfrow=c(1,2))
plot(model, which=1:2)
anova(model)
model <- lm(len ~ dose, data=ToothGrowth)
ToothGrowth$dose.f <- factor(ToothGrowth$dose)
str(ToothGrowth)
model <- lm(len ~ dose.f, data=ToothGrowth)
anova(model)
par(mfrow=c(1,2))
plot(model, which=1:2)
HSD.test(model, trt="dose", console=T, group=T)
pairw <- HSD.test(model, trt="dose", console=T, group=T)
plot(pairw)
dev.off()
pairw <- HSD.test(model, trt="dose", console=T, group=T)
plot(pairw)
model.aov <- aov(len ~ dose.f, data=ToothGrowth)
TukeyHSD(model.aov)
pairw.aov <- TukeyHSD(model.aov)
summary(pairw.aov )
TukeyHSD(model.aov)
plot(TukeyHSD(model.aov))
multcomp(model)
#alternative code 2
#works even for more comple models
?multcomp
#alternative code 2
#works even for more comple models
??multcomp
install.packages("multcomp")
#alternative code 2
#works even for more comple models
install.packages("multcomp")
library(multcomp)
model <- lm(len ~ dose.f, data=ToothGrowth)
multcomp(model)
glht(model)
glht(model, linfct=mcp(dose.f="Tukey"))
plot(glht(model, linfct=mcp(dose.f="Tukey")))
glht(model, linfct=mcp(dose.f="Tukey"))
(multc <- glht(model, linfct=mcp(dose.f="Tukey")))
plot(multc)
#Alternative code 2
#works even for more complex models, lots of options, powerful
install.packages("multcomp")
#Alternative code 2 ####
#works even for more complex models, lots of options, powerful
install.packages("multcomp")
#Alternative code 2 ####
#works even for more complex models, lots of options, powerful
install.packages("multcomp")
library(multcomp)
model <- lm(len ~ dose.f, data=ToothGrowth)
(multc <- glht(model, linfct=mcp(dose.f="Tukey")))
plot(multc)
summary(multc)
TukeyHSD(model.aov)
plot(TukeyHSD(model.aov))
plot(pairw)
# Tukey test
pairw <- HSD.test(model, trt="dose", console=T, group=T)
plot(pairw)
model <- lm(len ~ dose.f, data=ToothGrowth)
anova(model)
par(mfrow=c(1,2))
plot(model, which=1:2)
plot(pairw)
# Tukey test
pairw <- HSD.test(model, trt="dose", console=T, group=T)
library(agricolae) # activate package (needed!)
plot(pairw)
(multc <- glht(model, linfct=mcp(dose.f="Bonferroni")))
(multc <- glht(model, linfct=mcp(dose.f="Tukey")))
plot(multc)
summary(multc)
?glht
?contrMat
test <- c(1,2,3,4,5)
table(test)
table(test)[1,]
str(table(test))
sum(table(test) >1)
test <- c(1,2,3,3,4,5)
sum(table(test) >1)
library(readxl)
sal_11_13_simplified_dryad <- read_excel("Library/CloudStorage/Box-Box/Salix sex determination project/Ecological_analysis/Data from Wheeler et al. (2016)/doi_10/sal_11_13_simplified_dryad.xlsx",
col_types = c("text", "text", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"text", "numeric", "numeric", "numeric",
"numeric", "numeric", "text", "text",
"numeric", "text", "numeric", "text",
"text", "text", "text", "numeric",
"text", "text", "numeric", "text",
"text", "text", "numeric", "text",
"text", "text", "text", "text", "text",
"text", "text", "text", "text", "text",
"text", "text", "text", "text"))
View(sal_11_13_simplified_dryad)
library(readxl)
sal_11_13_simplified_dryad <- read_excel("Library/CloudStorage/Box-Box/Salix sex determination project/Ecological_analysis/Data from Wheeler et al. (2016)/doi_10/sal_11_13_simplified_dryad.xlsx",
col_types = c("text", "text", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"text", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"skip", "skip", "text", "numeric",
"text", "text", "text", "text", "numeric",
"text", "text", "numeric", "text",
"text", "text", "numeric", "text",
"text", "text", "text", "skip", "text",
"skip", "numeric", "text", "text",
"numeric", "numeric", "numeric",
"numeric", "numeric"))
View(sal_11_13_simplified_dryad)
salix <- read_excel("Library/CloudStorage/Box-Box/Salix sex determination project/Ecological_analysis/Data from Wheeler et al. (2016)/doi_10/sal_11_13_simplified_dryad.xlsx",
+     col_types = c("text", "text", "numeric",
salix <- read_excel("Library/CloudStorage/Box-Box/Salix sex determination project/Ecological_analysis/Data from Wheeler et al. (2016)/doi_10/sal_11_13_simplified_dryad.xlsx",
col_types = c("text", "text", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"text", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"skip", "skip", "text", "numeric",
"text", "text", "text", "text", "numeric",
"text", "text", "numeric", "text",
"text", "text", "numeric", "text",
"text", "text", "text", "skip", "text",
"skip", "numeric", "text", "text",
"numeric", "numeric", "numeric",
"numeric", "numeric"))
str(salix)
warnings()
str(salix)
salix <- salix[,-c("wood_nsc_per","north", "east", "uoi" )]
salix <- salix[,-"uoi"]
salix <- data.frame(salix)
salix <- salix[,-c("wood_nsc_per","north", "east", "uoi" )]
str(salix)
salix <- salix[,-c("wood_nsc_per","north", "east", "uoi" )]
salix <- salix[,-"uoi" ]
table(salix$sex, salix$year)
table(salix$id, salix$sex)
sex <- table(salix$id, salix$sex)
str(sex)
table(sex[,1]>0 & sex[,2]>0)
table(sex[,3]==3)
str(salix)
lm(salix$mean_lf_area ~ sex)
lm(mean_lf_area ~ sex, data=salix)
mod1 <- lm(mean_lf_area ~ sex, data=salix)
anova(mod1)
mod1 <- lm(mean_lf_area ~ sex + t, data=salix)
anova(mod1)
mod1 <- lm(mean_lf_area ~ sex * t, data=salix)
anova(mod1)
library(lme4)
str(salix)
mod1 <- lmer(mean_lf_area ~ sex +  (1|t) + (1|year), data=salix)
anova(mod1)
lmerTest(mod1)
library(lmerTest)
lmerTest::anova(mod1)
anova(mod1)
Anova(mod1)
library(lmerTest)
anova(mod1)
summary(mod1)
summary(salix$sex)
str(salix)
salix$sex <- factor(salix$sex)
summary(salix$sex)
mod1 <- lmer(mean_lf_area ~ sex +  (1|t) + (1|year), data=salix)
anova(mod1)
str(salix)
mod1 <- lmer(mean_lf_area ~ sex +  (1|t) + (1|year) + (1|id), data=salix)
anova(mod1)
summary(mod1)
summary(salix$sex)
is.na(salix$sex)
sum(is.na(salix$sex))
salix$sex[salix$sex=="NA"] <- NA
sum(is.na(salix$sex))
mod1 <- lmer(mean_lf_area ~ sex +  (1|t) + (1|year) + (1|id), data=salix)
anova(mod1)
salix$sex[salix$sex=="NA"] <- "nf"
str(salix)
salix$sex[salix$sex=="NA"] <- NA
sum(is.na(salix$sex))
salix$flowering <- "fl"
salix$flowering[is.na(salix$sex)==T] <- "nf"
table(salix$flowering, salix$sex)
is.na(salix$sex)==T
salix$sex[salix$sex=="NA"] <- NA
salix$flowering[is.na(salix$sex)==T] <- "nf"
table(salix$flowering, salix$sex)
salix$sex <- factor(salix$sex, relevel=T)
??relevel
salix$sex <- factor(salix$sex, levels= c("0", "1"))
salix$flowering[is.na(salix$sex)==T] <- "nf"
table(salix$flowering, salix$sex)
salix$flowering <- "fl"
salix$flowering[is.na(salix$sex)==T] <- "nf"
table(salix$flowering, salix$sex)
table(salix$flowering, is.na(salix$sex))
mod1 <- lmer(mean_lf_area ~ flowering +  (1|t) + (1|year) + (1|id), data=salix)
anova(mod1)
summary(mod1)
mod1 <- lmer(elevation ~ sex +  (1|t) + (1|year) + (1|id), data=salix)
str(salix)
mod1 <- lmer(elev ~ sex +  (1|t) + (1|year) + (1|id), data=salix)
anova(mod1)
mod1 <- lmer(elev ~ sex  +  (1|t) + (1|year) + (1|id), data=salix)
mod1 <- lmer(as.numeric(elev) ~ sex  +  (1|t) + (1|year) + (1|id), data=salix)
salix$elev <- as.numeric(salix$elev)
summary(salix$elev)
mod1 <- lmer(elev ~ sex  +  (1|t) + (1|year) + (1|id), data=salix)
anova(mod1)
str(salix)
mod1 <- lmer(snow ~ sex  +  (1|t) + (1|year) + (1|id), data=salix)
salix$snow <- as.numeric(salix$snow)
mod1 <- lmer(snow ~ sex  +  (1|t) + (1|year) + (1|id), data=salix)
anova(mod1)
plot(mod1)
mod1 <- lmer(snow ~ flowering  +  (1|t) + (1|year) + (1|id), data=salix)
plot(mod1)
anova(mod1)
mod1 <- lmer(elev ~ flowering  +  (1|t) + (1|year) + (1|id), data=salix)
anova(mod1)
mod1 <- lmer(elev ~ sex  +  (1|t) + (1|year) + (1|id), data=salix)
anova(mod1)
summary(mod1)
table(salix$sex, salix$year)
mod1 <- lmer(elev ~ sex  +  (1|t), data=salix[salix$year=="11"])
mod1 <- lmer(elev ~ sex  +  (1|t), data=salix[salix$year=="11",])
anova(mod1)
mod1 <- lmer(elev ~ sex  +  (1|t), data=salix[salix$year=="12",])
anova(mod1)
mod1 <- lmer(elev ~ sex  +  (1|t), data=salix[salix$year=="13",])
anova(mod1)
str(salix)
mod1 <- lmer(fl_snow ~ sex  +  (1|t), data=salix[salix$year=="13",])
anova(mod1)
mod1 <- lmer(fl_snow ~ sex  +  (1|t) +(1|year), data=salix)
anova(mod1)
summary(mod1)
mod1 <- lmer(fl_snow ~ sex  +  (1|t) +(1|year) +(1|id), data=salix)
anova(mod1)
salix <- read_excel("Library/CloudStorage/Box-Box/Salix sex determination project/Ecological_analysis/Data from Wheeler et al. (2016)/doi_10/sal_11_13_simplified_dryad.xlsx",
col_types = c("text", "text", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"text", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"skip", "skip", "text", "numeric",
"text", "text", "text", "text", "numeric",
"text", "text", "numeric", "text",
"text", "text", "numeric", "text",
"text", "text", "text", "skip", "text",
"skip", "numeric", "text", "text",
"numeric", "numeric", "numeric",
"numeric", "numeric"))
salix <- read_excel("Library/CloudStorage/Box-Box/Salix sex determination project/Ecological_analysis/Data from Wheeler et al. (2016)/doi_10/sal_11_13_simplified_dryad.xlsx",
col_types = c("text", "text", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"text", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"skip", "skip", "numeric", "numeric",
"text", "text", "text", "text", "numeric",
"text", "text", "numeric", "text",
"text", "text", "numeric", "text",
"text", "text", "text", "skip", "text",
"skip", "numeric", "text", "text",
"skip", "skip", "numeric",
"skip", "skip"))
#load data
library(readxl)
salix <- read_excel("Library/CloudStorage/Box-Box/Salix sex determination project/Ecological_analysis/Data from Wheeler et al. (2016)/doi_10/sal_11_13_simplified_dryad.xlsx",
col_types = c("text", "text", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"text", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"skip", "skip", "numeric", "numeric",
"text", "text", "text", "text", "numeric",
"text", "text", "numeric", "text",
"text", "text", "numeric", "text",
"text", "text", "text", "skip", "text",
"skip", "numeric", "text", "text",
"skip", "skip", "numeric",
"skip", "skip"))
str(salix)
salix <- data.frame(salix)
str(salix)
str(pp)
pp <- read.delim("~/Desktop/doi_10/patchprop.txt", header=T)
table(pp$t, pp$year)
str(pp)
table(pp$exp)
?prop.test
citation()
?lmer
?lme4
??lme4
library(lme4)
citation("lme4")
citation(lmerTest)
citation("lmerTest")
rbind(c(c(190, 181, 274)), c(274, 261, 194))
surv <- rbind(c(c(190, 181, 274)), c(274, 261, 194))
chisq.test(surv)
sr <- rbind(c(c(151, 132, 100)), c(62, 45, 41))
sr
chisq.test(sr)
sqrt(776)
8*6*9*3
8*6*9
12*1300
8000*10*1/12
164*12
# read from box
23*8
5*4
citation("geosphere")
7*7*7
8*6
8*6 *28
8*6 *28 * 0.343
6*6*6
51/6
29/6
48*32
48*32*0.216
3.25*40
850000*3
850000*3 +165000
3*7*9*8
3*7*9*6
4*8*9*6
3*7*8*6
data <- read.csv("~/Dropbox/My Mac (MacBook Pro som tillhör OSX)/Documents/GROUP/GROUP_PEOPLE/Hanna/merging trieal/data.csv", sep=";", stringsAsFactors=TRUE)
View(data)
merging <- read.csv("~/Dropbox/My Mac (MacBook Pro som tillhör OSX)/Documents/GROUP/GROUP_PEOPLE/Hanna/merging trieal/merging.csv", sep=";", stringsAsFactors=TRUE)
View(merging)
str(data)
str(merging)
data.merge <- merge(data, merging, by="Species")
str(data.merge)
aggregate(data.merge, "Group_new.name", sum)
aggregate(data.merge, by=list("Group_new.name"), sum)
aggregate(data.merge, by=list(data.nerge$Group_new.name), sum)
aggregate(data.merge, by=list(data.merge$Group_new.name), sum)
str(aggregate(data.merge, by=list(data.merge$Group_new.name), sum))
str(aggregate(data.merge[2:12,], by=list(data.merge$Group_new.name), sum))
?aggregate
data.merge[2:12,]
data.merge[3:10,]
data.merge[3:10,]
str(data.merge)
data.merge[2,]
str(aggregate(data.merge[,2:12], by=list(data.merge$Group_new.name), sum))
data.merge[,2:12]
str(aggregate(as.numeric(data.merge[,2:12]), by=list(data.merge$Group_new.name), sum))
str(aggregate(as.numeric(data.merge[,2:13]), by=list(data.merge$Group_new.name), sum))
str(aggregate(as.numeric(data.merge[,2:13]), by=data.merge$Group_new.name, sum))
str(data.merge)
data <- read.csv("~/Dropbox/My Mac (MacBook Pro som tillhör OSX)/Documents/GROUP/GROUP_PEOPLE/Hanna/merging trieal/data.csv", sep=";", stringsAsFactors=TRUE)
merging <- read.csv("~/Dropbox/My Mac (MacBook Pro som tillhör OSX)/Documents/GROUP/GROUP_PEOPLE/Hanna/merging trieal/merging.csv", sep=";", stringsAsFactors=TRUE)
str(data)
str(merging)
data.merge <- merge(data, merging, by="Species")
str(data.merge)
str(aggregate(as.numeric(data.merge[,2:12]), by=data.merge$Group_new.name, sum))
str(aggregate(as.numeric(data.merge[,2:12]), by=list(data.merge$Group_new.name), sum))
str(aggregate(data.merge, by=list(data.merge$Group_new.name), sum))
ag <- aggregate(len ~ ., data = ToothGrowth, mean)
ag
ToothGrowth
str(aggregate(.~Group_new.name, data=data.merge, sum))
new.data <- aggregate(.~Group_new.name, data=data.merge, sum)
new.data
merging <- read.csv("~/Dropbox/My Mac (MacBook Pro som tillhör OSX)/Documents/GROUP/GROUP_PEOPLE/Hanna/merging trieal/merging.csv", sep=";", stringsAsFactors=TRUE)
str(data)
str(merging)
data.merge <- merge(data, merging, by="Species")
str(data.merge)
new.data <- aggregate(.~Group_new.name, data=data.merge, sum)
new.data
str(data.merge)
merging <- read.csv("~/Dropbox/My Mac (MacBook Pro som tillhör OSX)/Documents/GROUP/GROUP_PEOPLE/Hanna/merging trieal/merging.csv", sep=";", stringsAsFactors=TRUE)
str(data)
str(merging)
data.merge <- merge(data, merging, by="Species")
str(data.merge)
new.data <- aggregate(.~Group_new.name, data=data.merge, sum)
new.data
data <- read.csv("~/Dropbox/My Mac (MacBook Pro som tillhör OSX)/Documents/GROUP/GROUP_PEOPLE/Hanna/merging trieal/data.csv", sep=";", stringsAsFactors=TRUE)
merging <- read.csv("~/Dropbox/My Mac (MacBook Pro som tillhör OSX)/Documents/GROUP/GROUP_PEOPLE/Hanna/merging trieal/merging.csv", sep=";", stringsAsFactors=TRUE)
str(data)
str(merging)
data.merge <- merge(data, merging, by="Species")
str(data.merge)
new.data <- aggregate(.~Group_new.name, data=data.merge, sum)
new.data
str(data.merge)
exp(0.74)
exp(-0.3)
exp(0.11)
exp(13.43)
library(effects)
citation("effects")
? glm
citation("stats")
# Silene analysis autosomes, X and Y
# 2023-09-08
# Sophie
##load packages ####
library(qqman)
library(dplyr)
library(zoo)
library(ggplot2)
library(gridExtra)                                         # Install scales package
library(scales)
library(ggridges)
library(gridExtra)
# Add fig lab function####
line2user <- function(line, side) {
lh <- par('cin')[2] * par('cex') * par('lheight')
x_off <- diff(grconvertX(c(0, lh), 'inches', 'npc'))
y_off <- diff(grconvertY(c(0, lh), 'inches', 'npc'))
switch(side,
`1` = grconvertY(-line * y_off, 'npc', 'user'),
`2` = grconvertX(-line * x_off, 'npc', 'user'),
`3` = grconvertY(1 + line * y_off, 'npc', 'user'),
`4` = grconvertX(1 + line * x_off, 'npc', 'user'),
stop("Side must be 1, 2, 3, or 4", call.=FALSE))
}
addfiglab <- function(lab, xl = par()$mar[2], yl = par()$mar[3]) {
text(x = line2user(xl, 2), y = line2user(yl, 3),
lab, xpd = NA, font = 2, cex = 1.5, adj = c(0, 1))
}
#FST within-species FRAPOL####----------------------------------
# read September 4 2023 data, test####
setwd("~/Documents/PROJECTS/Silene consortium/Data/Sep04_v4.0 reanalysis/female/fst")
###read data from txt####
FRA1POL3_fst <- read.delim("~/Dropbox/My Mac (MacBook Pro som tillhör OSX)/Documents/PROJECTS/Silene consortium/Data/Sep04_v4.0 reanalysis/female/fst/FRA1POL3_fst.txt")
#FST within-species FRAPOL####----------------------------------
# read September 4 2023 data, test####
setwd("~/Documents/PROJECTS/Silene consortium/Data/Sep04_v4.0 reanalysis/female/fst")
###read data from txt####
FRA1POL3_fst <- read.delim("~/Dropbox/My Mac (MacBook Pro som tillhör OSX)/Documents/PROJECTS/Silene consortium/Data/Sep04_v4.0 reanalysis/female/fst/FRA1POL3_fst.txt")
chrY.FRA1POL3.haploid_fst <- read.delim("~/Dropbox/My Mac (MacBook Pro som tillhör OSX)/Documents/PROJECTS/Silene consortium/Data/Sep04_v4.0 reanalysis/male/Fst/chrY.FRA1POL3.haploid_fst.txt")
